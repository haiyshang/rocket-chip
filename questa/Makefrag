#--------------------------------------------------------------------
# Sources
#--------------------------------------------------------------------

# Verilog sources

bb_vsrcs = \
	$(base_dir)/vsrc/jtag_vpi.v \
	$(base_dir)/vsrc/plusarg_reader.v \
	$(base_dir)/vsrc/ClockDivider2.v \
	$(base_dir)/vsrc/ClockDivider3.v \
	$(base_dir)/vsrc/AsyncResetReg.v \

sim_vsrcs = \
	$(generated_dir)/$(long_name).v \
	$(generated_dir)/$(long_name).behav_srams.v \
	$(base_dir)/vsrc/$(TB).v \
	$(base_dir)/vsrc/SimDTM.v \
	$(bb_vsrcs)

# C sources

sim_csrcs = \
	$(base_dir)/csrc/SimDTM.cc \
	$(base_dir)/csrc/jtag_vpi.c

#--------------------------------------------------------------------
# Build Verilog
#--------------------------------------------------------------------

verilog: $(sim_vsrcs)

.PHONY: verilog

#--------------------------------------------------------------------
# Build rules
#--------------------------------------------------------------------

VLOG = vlog

# -notice -line -error=PCWM-L  -CC "-I$(VLOG_HOME)/include" \
#	-CC "-I$(RISCV)/include" \
#	-CC "-std=c++11" \
#	-CC "-Wl,-rpath,$(RISCV)/lib" \
#	$(RISCV)/lib/libfesvr.so \
#   $(sim_csrcs) \
#	+vc+list \
#	+rad +v2k +vcs+lic+wait \
#	+libext+.v \

VLOG_OPTS = +lint=all,noVCDE,noONGS,noUI -timescale=1ns/10ps \
	-sv \
	+incdir+$(generated_dir) \
	+define+DEBUG \
	+define+CLOCK_PERIOD=1.0 $(sim_vsrcs) \
	+define+PRINTF_COND=$(TB).printf_cond \
	+define+STOP_COND=!$(TB).reset \
	+define+RANDOMIZE_MEM_INIT \
	+define+RANDOMIZE_REG_INIT \
	+define+RANDOMIZE_GARBAGE_ASSIGN \
	+define+RANDOMIZE_INVALID_ASSIGN \
	-work worklib \
	-l vlog.log

# VLOG_OPTS += +vpi
# VLOG_OPTS += -P $(base_dir)/vsrc/jtag_vpi.tab
# VLOG_OPTS += -CC "-DVLOG_VPI"


#--------------------------------------------------------------------
# Build the simulator
#--------------------------------------------------------------------

# -o $(simv) \
# 	-debug_pp \

vlib:
	vlib worklib

# simv = $(sim_dir)/simv-$(PROJECT)-$(CONFIG)
simv = vsim
$(simv) : vlib $(sim_vsrcs) $(sim_csrcs)
	cd $(sim_dir) && \
	rm -rf csrc && \
	$(VLOG) $(VLOG_OPTS) \


# simv_debug = $(sim_dir)/simv-$(PROJECT)-$(CONFIG)-debug
simv_debug = vsim_debug
$(simv_debug) : $(sim_vsrcs) $(sim_csrcs)
	cd $(sim_dir) && \
	rm -rf csrc && \
	$(VLOG) $(VLOG_OPTS) \

#--------------------------------------------------------------------
# Run
#--------------------------------------------------------------------

seed = $(shell date +%s)
# exec_simv = $(simv) -q +ntb_random_seed_automatic
exec_simv = $(simv) +ntb_random_seed_automatic worklib.TestDriver \
          +access+rw \
          -voptargs="+acc" \
		  -c \
          -l simv.log \
          -do "add log -r sim:/tb_mag_top/*; run -all; quit"

exec_simv_debug = $(simv) +ntb_random_seed_automatic worklib.TestDriver \
          +access+rw \
          -voptargs="+acc" \
		  -gui \
          -l simv.log \
          -do "add log -r sim:/TestDriver/*; run -all"
